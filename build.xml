<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** simplelabentry Module                               ** -->
<!-- **	                                                    ** -->
<!-- ** @author Michael Seaton                              ** -->
<!-- ** @version 1.0                                        ** -->
<!-- ********************************************************* -->
<project name="SimpleLabEntry" default="package-module">

	<!-- *********************************************************** -->
	<!-- **                 BUILD PROPERTIES                      ** -->
	<!-- *********************************************************** -->
	<property environment="env"/>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="lib-common/ant-contrib-1.0b2.jar"/>
	
	<available file="${env.OPENMRS_BUILD_PROPERTIES_FILE}" property="env.file.exists"/>
	<available file="${user.home}/Application Data/OpenMRS/OPENMRS-build.properties" property="appdata.file.exists"/>
	<available file="${user.home}/.OpenMRS/OPENMRS-build.properties" property="unix.file.exists"/>
	<if>
		<equals arg1="${env.file.exists}" arg2="true" />
		<then><property file="${env.OPENMRS_BUILD_PROPERTIES_FILE}"/></then>
		<elseif>
			<equals arg1="${appdata.file.exists}" arg2="true" />
			<then><property file="${user.home}/Application Data/OpenMRS/OPENMRS-build.properties"/></then>
		</elseif>
		<elseif>
			<equals arg1="${unix.file.exists}" arg2="true" />
			<then><property file="${user.home}/.OpenMRS/OPENMRS-build.properties"/></then>
		</elseif>
		<else><echo message="WARNING: No build properties found"/></else>
	</if>

	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->
	<target name="init-classpath">
		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="lib-common">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="../openmrs-1.6.x/lib">
				<include name="**/*.jar"/>
			</fileset>
		</path>
	</target>

	<target name="init-config-file">
		<xmlcatalog id="common-dtds">
			<dtd 
	            publicId="-//OpenMRS//DTD OpenMRS Config 1.2//EN"
	            location="lib-common/config-1.2.dtd"/>
		</xmlcatalog>

		<xmlproperty file="metadata/config.xml" >
			<xmlcatalog refid="common-dtds"/>
		</xmlproperty>

		<xmlproperty file="metadata/config.xml" />
	</target>

	<target name="init-compiler-args">
		<property name="compile.arguments" value=""/>
	</target>

	<target name="init" depends="init-config-file,init-classpath,init-compiler-args">
		<filterset id="variables.to.replace">
			<filter token="MODULE_ID" value="${module.id}" />
			<filter token="MODULE_NAME" value="${module.name}" />
			<filter token="MODULE_VERSION" value="${module.version}" />
			<filter token="MODULE_PACKAGE" value="${module.package}" />
		</filterset>

	</target>

	<target name="clean" description="Delete build and dist directories">
		<delete dir="dist" />
		<delete dir="build" />
	</target>

	<target name="compile-module" depends="init">
		<mkdir dir="build" />

		<!-- Copy other source data to the build folder -->
		<copy todir="build">
			<fileset dir="src/" excludes="**/*.java" />
		</copy>

		<!--  Compile module java files -->
		<javac destdir="build" classpathref="classpath" debug="true" debuglevel="vars,lines,source">
			<compilerarg line="${compile.arguments}" />
			<compilerarg line="-g" />
			<src path="src/" />
			<src path="web/src/" />
			<include name="**/*.java" />
		</javac>

	</target>

	<target name="package-module" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />

		<!-- Copy module metadata -->
		<copy todir="build/">
			<fileset dir="metadata/" includes="**/*" />
			<filterset refid="variables.to.replace" />
		</copy>

		<!-- Copy module web data -->
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="**/*" excludes="resources/**/*" />
			<filterset refid="variables.to.replace" />
		</copy>

		<!-- Copy the /web/resources folder separately so that image files are not corrupted -->
		<copy todir="build/web/module/">
			<fileset dir="web/module/" includes="resources/**/*" />
		</copy>

		<!-- Copy lib folder -->
		<!-- (lib should only contain this module's required -->
		<!-- libraries that OpenMRS doesn't contain already) -->
		<copy todir="build/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>

		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.name}-${module.version}.omod">
			<fileset dir="build" includes="**/*" />
		</jar>

	</target>

	<target name="deploy-web" depends="package-module" description="Copy web files to webapp">
		<echo>tomcat.home=${tomcat.home}</echo>
		<fail message="Make sure 'tomcat.home' in 'OPENMRS-build.properties' is set to a valid tomcat install">
			<condition>
				<not>
					<available file="${tomcat.home}/webapps/openmrs/WEB-INF/">
					</available>
				</not>
			</condition>
		</fail>
		<copy todir="${tomcat.home}/webapps/openmrs/WEB-INF/view/module/${module.id}">
			<fileset dir="web/module" includes="**/*" />
		</copy>
	</target>

	<target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.jar">
			<fileset dir="build" >
				<exclude name="web/**/*" />
				<exclude name="test/**/*" />
			</fileset>
		</jar>
	</target>

</project>

